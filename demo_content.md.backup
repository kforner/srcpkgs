I will demonstrate srcpkgs using a dummy collection of source packages: https://github.com/kforner/srcpkgs_lotr_demo

setup
We need to setup a few things for that demo:

make sure srcpkgs is installed, cf https://kforner.github.io/srcpkgs/#installation
fetch the srcpkgs_lotr_demo code
git checkout https://github.com/kforner/srcpkgs_lotr_demo.git
cd srcpkgs_lotr_demo

# start a R session and load devtools
R
>library(devtools)
overview of the srcpkgs_lotr_demo collection
It consists currently in 11 related packages, with a tree structure:

lotr - the highest level package
elves
legolas
galadriel
hobbits
bilbo
frodo
gimli
aragorn
gandalf
elrond
N.B: lotr depends on all other packages, except for elrond (not yet).

The dependencies are implemented by a mix of Imports, Imports with namespace imports and Depends.

using devtools
loading
devtools is designed to manage a single source package. Let's use it to load our lotr source package:

>load_all('lotr')
ℹ Loading lotr
ℹ The package "hobbits" is required.
✖ Would you like to install it?
--> devtools can not load lotr since it can not possibly find the hobbits package.

Let's help him:

load_all('hobbits')
ℹ Loading hobbits
ℹ The package "bilbo" is required.
✖ Would you like to install it?
--> same problem

Here is how we must load the packages, following the dependencies order:

load_all('bilbo')
load_all('frodo')
load_all('hobbits')

load_all('legolas')
load_all('galadriel')
load_all('elves')

load_all('gimli')
load_all('aragorn')
load_all('gandalf')

# and finally
load_all('lotr')

# use it
str(lotr())
editing and reloading
a package listed in Depends
Let's modify one the direct dependency of lotr, e.g. the hobbits package. Currently:

> names(lotr()$hobbits)
[1] "frodo" "bilbo"

Edit srcpkgs_lotr_demo/elves/R/main.R and remove galadriel

#' list the available hobbits
#' @return elves names as character
#' @export
#' @importFrom galadriel galadriel
elves <- function() {
  list(
    # galadriel = galadriel(), # importFrom
    legolas = legolas::legolas() # import,
  )
}
Let's try to apply our changes:

load_all('lotr')
names(lotr()$elves)
[1] "galadriel" "legolas"

load_all('elves')
names(lotr()$elves)
[1] "galadriel" "legolas"
This did not work. We need to unload the elves package. Let's try:

devtools::unload('elves')
load_all('elves')
names(lotr()$elves)
[1] "galadriel" "legolas" 
it still does not work. Finally:

devtools::unload('lotr')
load_all('lotr')
names(lotr()$elves)
"legolas"
So the correst sequence is